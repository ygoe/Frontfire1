@import "../settings";

.ff-slider
{
	position: relative;
	border: solid $sliderMargin transparent;
	outline: none;
	&:focus
	{
		border-color: rgba(0, 0, 0, 0.04);
	}

	.ff-background
	{
		position: absolute;
		width: 100%;
		height: 100%;
		background: $sliderBackground;
		transition: background $animationDuration $animationFunction;
	}

	.ff-range
	{
		position: absolute;
		background: $sliderRangeBackground;
		left: 0;
		bottom: 0;
		pointer-events: none;
		transition: background $animationDuration $animationFunction;
	}
	.ff-ticks
	{
		position: absolute;
		left: 0;
		right: 0;
		top: 0;
		bottom: 0;
		pointer-events: none;
		> div
		{
			position: absolute;
			border: 0px solid $sliderSmallTickColor;
			transition: border $animationDuration $animationFunction;
			&::after
			{
				position: absolute;
				display: block;
				content: attr(data-label);
				font-size: $sliderTickLabelFontSize;
				color: $sliderSmallTickColor;
				transition: color $animationDuration $animationFunction;
			}
			&.large
			{
				border-color: $sliderLargeTickColor;
				&::after { color: $sliderLargeTickColor; }
			}
		}
	}
	.ff-handle
	{
		position: absolute;
		background: $sliderHandleBackground;
		box-shadow: rgba(0, 0, 0, 0.2) 0 1px 3px;
		transition: background $animationDuration $animationFunction, border $animationDuration $animationFunction;
		&:hover
		{
			background: $sliderHandleHoverBackground;
			transition: background 0s, border 0s;
		}
		&.pressed
		{
			background: $sliderHandlePressedBackground;
			box-shadow: none;
			transition: background 0s, border 0s;
		}
	}

	&[disabled]
	{
		&::before
		{
			background: $sliderDisabledBackground;
		}
		.ff-ticks > div
		{
			border: 0px solid $sliderDisabledSmallTickColor;
			&::after
			{
				color: $sliderDisabledSmallTickColor;
			}
			&.large
			{
				border-color: $sliderDisabledLargeTickColor;
				&::after { color: $sliderDisabledLargeTickColor; }
			}
		}
		.ff-handle,
		.ff-handle:hover
		{
			background: $sliderDisabledHandleBackground;
		}
	}

	&:not(.vertical)
	{
		height: $sliderWidth + $sliderMargin * 2;
		border-left-width: $sliderHandleLength * 0.5;
		border-right-width: $sliderHandleLength * 0.5;

		.ff-range
		{
			height: 100%;
		}
		.ff-ticks
		{
			right: 1px;
			> div
			{
				width: 1px;
				height: 5px;
				border-left-width: 1px;
				&::after
				{
					left: 0;
					transform: translate(-50%, 0);
				}
				&:not(.opposite)
				{
					top: -5px;
					&::after { bottom: calc(100% + 3px); }
				}
				&.opposite
				{
					bottom: -5px;
					&::after { top: calc(100% + 2px); }
				}

				&.large
				{
					height: 8px;
					&:not(.opposite)
					{
						top: -8px;
						&::after { bottom: calc(100% - 0px); }
					}
					&.opposite
					{
						bottom: -8px;
						&::after { top: calc(100% - 1px); }
					}
				}
			}
		}
		.ff-handle
		{
			top: -($sliderHandleWidth - $sliderWidth) * 0.5;
			width: $sliderHandleLength;
			height: $sliderHandleWidth;
		}
	}
	&.vertical
	{
		width: $sliderWidth + $sliderMargin * 2;
		border-top-width: $sliderHandleLength * 0.5;
		border-bottom-width: $sliderHandleLength * 0.5;

		.ff-range
		{
			width: 100%;
		}
		.ff-ticks
		{
			top: 1px;
			> div
			{
				height: 1px;
				width: 5px;
				border-top-width: 1px;
				&::after
				{
					top: 0;
					padding-right: 3px;   // Move away from the ticks
					padding-bottom: 2px;   // Move 1px up
					transform: translate(0, -50%);
				}
				&:not(.opposite)
				{
					left: -5px;
					&::after { right: calc(100% + 5px); }
				}
				&.opposite
				{
					right: -5px;
					&::after { left: calc(100% + 7px); }
				}

				&.large
				{
					width: 8px;
					&:not(.opposite)
					{
						left: -8px;
						&::after { right: calc(100% + 2px); }
					}
					&.opposite
					{
						right: -8px;
						&::after { left: calc(100% + 4px); }
					}
				}
			}
		}
		.ff-handle
		{
			left: -($sliderHandleWidth - $sliderWidth) * 0.5;
			width: $sliderHandleWidth;
			height: $sliderHandleLength;
		}
	}
}
